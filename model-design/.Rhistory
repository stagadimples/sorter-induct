library(RODBC)
con <- odbcConnect(dsn = "stay_ahead", pwd = "Formula1")
library(sqldf)
df = sqlQuery(con, "select table_name from user_tables")
df
sales = sqlQuery(con, "select * from sales")
nrow(sales)
retail = sqlQuery(con, "select * from retail")
nrow
nrow(retail)
orders = sqlQuery(con, "select * from orders")
nrow(orders)
orders
# load libraries
library(tidyverse)
# load libraries
library(tidyverse); library(lubridate)
rm(list = ls())
gc()
dt <- read.table("data-raw/rawdata.txt", header = T, sep = ",")
head(dt)
names(dt) <- tolower(names(dt))
head(dt)
# load libraries
library(tidyverse); library(lubridate)
dt <- read.table("data-raw/rawdata.txt", header = T, sep = ",")
names(dt) <- tolower(names(dt))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time))
head(sorter)
prop.table(table(sorter$classification))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(h(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode))
h <- hour(sorter$sorter_time)
head(h)
head(sorter)
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode))
head(sorter)
unique(dt$classification)
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(ifelse(classification = "Bagging Line", shipping_lpn)))
?if_else
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(classification = "Bagging Line", shipping_lpn)))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(classification == "Bagging Line", shipping_lpn)))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(classification == "Bagging Line", shipping_barcode)))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(classification == "Bagging Line", shipping_barcode, NULL)))
head(sorter)
length(unique(dt$shipping_barcode[dt$classification == "Bagging Line"]))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(ifelse(classification == "Bagging Line", shipping_barcode, NULL)))
t <- dt[dt$classification == "Bagging Line", ]
head(t)
t$hr <- hour(t$sorter_time)
head(t)
ts <- t[t$hr == 0, ]
head(ts)
range(t$hr)
ts <- t[t$hr == 1, ]
head(ts)
unique(ts$shipping_barcode)
length(unique(ts$shipping_barcode))
dt <- read.table("data-raw/rawdata.txt", header = T, sep = ",")
head(dt)
dt$hr <- hour(ymd_hms(dt$DELIVERY_TIME))
head(dt)
t <- dt[dt$classification == "Bagging Line" & dt$hr == 0, ]
head(t)
t <- dt[dt$classification == "Bagging Line" & dt$hr == 1, ]
head(t)
unique(dt$CLASSIFICATION)
t <- dt[dt$classification == "Bagging Line" & dt$hr == 1, ]
head(t)
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(classification == "Bagging Line", shipping_barcode, NA)))
# load libraries
library(tidyverse); library(lubridate)
dt <- read.table("data-raw/rawdata.txt", header = T, sep = ",")
names(dt) <- tolower(names(dt))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(classification == "Bagging Line", shipping_barcode, NA)))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(classification == "Bagging Line", shipping_barcode, NULL)),
mpc = n_distinct(if_else(classification == "MediumPickingCarton", shipping_barcode, NULL)))
head(sorter)
head(dt)
# load libraries
library(tidyverse); library(lubridate)
dt <- read.table("data-raw/rawdata.txt", header = T, sep = ",")
names(dt) <- tolower(names(dt))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(classification == "Bagging Line", shipping_barcode, NULL)),
mpc = n_distinct(if_else(classification == "MediumPickingCarton", shipping_barcode, NULL)))
head(dt)
unique(dt$classification)
unique(dt$handling_type)
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time), htype = ifelse(handling_type == 'SmallFinishingCartonNano',
'Nano', classification)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(htype == "Bagging Line", shipping_barcode, NULL)),
mpc = n_distinct(if_else(htype == "MediumPickingCarton", shipping_barcode, NULL)),
mpcl = n_distinct(if_else(htype == "MediumPickingCartonLarge", shipping_barcode, NULL)),
pb = n_distinct(if_else(htype == "Pack Bench", shipping_barcode, NULL)),
hpb = n_distinct(if_else(htype == "Hanging Pack Bench", shipping_barcode, NULL)),
scl = n_distinct(if_else(htype == "Carton Finishing Line", shipping_barcode, NULL)),
nano = n_distinct(if_else(htype == "Nano", shipping_barcode, NULL))
)
head(sorter)
View(sorter)
head(sorter)
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time), htype = ifelse(handling_type == 'SmallFinishingCartonNano',
'Nano', classification))
head(sorter)
# load libraries
library(tidyverse); library(lubridate)
dt <- read.table("data-raw/rawdata.txt", header = T, sep = ",", stringsAsFactors = F)
names(dt) <- tolower(names(dt))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time), htype = ifelse(handling_type == 'SmallFinishingCartonNano',
'Nano', classification)) %>%
group_by(hour(sorter_time)) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(htype == "Bagging Line", shipping_barcode, NULL)),
mpc = n_distinct(if_else(htype == "MediumPickingCarton", shipping_barcode, NULL)),
mpcl = n_distinct(if_else(htype == "MediumPickingCartonLarge", shipping_barcode, NULL)),
pb = n_distinct(if_else(htype == "Pack Bench", shipping_barcode, NULL)),
hpb = n_distinct(if_else(htype == "Hanging Pack Bench", shipping_barcode, NULL)),
scl = n_distinct(if_else(htype == "Carton Finishing Line", shipping_barcode, NULL)),
nano = n_distinct(if_else(htype == "Nano", shipping_barcode, NULL))
)
head(sorter)
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time), hr = hour(sorter_time),
htype = ifelse(handling_type == 'SmallFinishingCartonNano', 'Nano', classification)) %>%
group_by(hr) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(htype == "Bagging Line", shipping_barcode, NULL)),
mpc = n_distinct(if_else(htype == "MediumPickingCarton", shipping_barcode, NULL)),
mpcl = n_distinct(if_else(htype == "MediumPickingCartonLarge", shipping_barcode, NULL)),
pb = n_distinct(if_else(htype == "Pack Bench", shipping_barcode, NULL)),
hpb = n_distinct(if_else(htype == "Hanging Pack Bench", shipping_barcode, NULL)),
scl = n_distinct(if_else(htype == "Carton Finishing Line", shipping_barcode, NULL)),
nano = n_distinct(if_else(htype == "Nano", shipping_barcode, NULL))
)
head(sorter)
# load libraries
library(tidyverse); library(lubridate)
dt <- read.table("data-raw/rawdata.txt", header = T, sep = ",", stringsAsFactors = F)
names(dt) <- tolower(names(dt))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time), hr = hour(sorter_time),
htype = ifelse(handling_type == 'SmallFinishingCartonNano', 'Nano', classification)) %>%
group_by(hr) %>%
summarise(parcels = n_distinct(shipping_barcode),
bagging = n_distinct(if_else(htype == "Bagging Line", shipping_barcode, NULL)),
lpc = n_distinct(if_else(htype == "Large Carton Line", shipping_barcode, NULL)),
mpc = n_distinct(if_else(htype == "MediumPickingCarton", shipping_barcode, NULL)),
mpcl = n_distinct(if_else(htype == "MediumPickingCartonLarge", shipping_barcode, NULL)),
pb = n_distinct(if_else(htype == "Pack Bench", shipping_barcode, NULL)),
hpb = n_distinct(if_else(htype == "Hanging Pack Bench", shipping_barcode, NULL)),
scl = n_distinct(if_else(htype == "Carton Finishing Line", shipping_barcode, NULL)),
nano = n_distinct(if_else(htype == "Nano", shipping_barcode, NULL))
)
head(sorter)
nrow(dt)
length(unique(dt$shipping_barcode))
length(unique(dt$shipping_barcode[hour(dt$sorter_time) == 0]))
length(unique(dt$shipping_barcode[hour(ymd_hms(dt$sorter_time)) == 0]))
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time), hr = hour(sorter_time),
htype = ifelse(handling_type == 'SmallFinishingCartonNano', 'Nano', classification)) %>%
group_by(hr) %>%
summarise(bagging = n_distinct(if_else(htype == "Bagging Line", shipping_barcode, NULL)),
lpc = n_distinct(if_else(htype == "Large Carton Line", shipping_barcode, NULL)),
mpc = n_distinct(if_else(htype == "MediumPickingCarton", shipping_barcode, NULL)),
mpcl = n_distinct(if_else(htype == "MediumPickingCartonLarge", shipping_barcode, NULL)),
pb = n_distinct(if_else(htype == "Pack Bench", shipping_barcode, NULL)),
hpb = n_distinct(if_else(htype == "Hanging Pack Bench", shipping_barcode, NULL)),
scl = n_distinct(if_else(htype == "Carton Finishing Line", shipping_barcode, NULL)),
nano = n_distinct(if_else(htype == "Nano", shipping_barcode, NULL)),
parcels = n_distinct(shipping_barcode)
)
head(sorter)
plot(sorter$parcels)
ggplot(sorter, aes(x = hr)) +
geom_point(aes(y = bagging))
ggplot(sorter, aes(x = hr)) +
geom_point(aes(y = bagging)) +
geom_point(aes(y = lpc))
ggplot(sorter, aes(x = hr)) +
geom_point(aes(y = bagging), colour = "brown") +
geom_point(aes(y = lpc), colour = "blue")
ggplot(sorter, aes(x = hr)) +
geom_line(aes(y = bagging), colour = "brown") +
geom_line(aes(y = lpc), colour = "blue")
sorter_lf <- gather(sorter, key = 'description', value = 'parcels', select = -hr)
head(sorter_lf)
sorter_lf$description <- factor(sorter_lf$description)
ggplot(sorter_lf, aes(x = hr, y = parcels)) +
geom_line(aes(colour = description))
sorter_lf %>%
filter(description != 'bagging') %>%
ggplot(aes(x = hr, y = parcels)) +
geom_line(aes(colour = description))
sorter_lf %>%
filter(description != 'parcels') %>%
ggplot(aes(x = hr, y = parcels)) +
geom_line(aes(colour = description))
sorter_lf %>%
filter(description != 'parcels') %>%
ggplot(aes(x = hr, y = parcels)) +
geom_line(aes(colour = description), size = 1.5)
sorter_lf %>%
filter(description != 'parcels') %>%
ggplot(aes(x = hr, y = parcels)) +
geom_line(aes(colour = description), size = 1)
sorter_lf %>%
filter(description != 'parcels') %>%
ggplot(aes(x = description, y = parcels)) +
geom_boxplot(aes(colour = description))
sorter_lf %>%
filter(description != 'parcels') %>%
ggplot(aes(x = description, y = parcels)) +
geom_boxplot(aes(colour = description), size = 1)
sorter_lf %>%
filter(description != 'parcels') %>%
ggplot(aes(x = hr, y = parcels)) +
geom_line(aes(colour = description), size = 1)
head(sorter)
max(sorter$parcels)
r <- rowSums(sorter)
head(r)
s_copy <- sorter[, 1:(ncol(sorter) - 1)]
head(s_copy)
t <- s_copy / rowSums(s_copy)
head(t)
sorter_rl <- sorter[2:(ncol(sorter) - 1)] / rowSums(sorter[2:(ncol(sorter) - 1)])
head(sorter_rl)
sorter_rl <- cbind(sorter$hr, sorter[2:(ncol(sorter) - 1)] / rowSums(sorter[2:(ncol(sorter) - 1)]))
head(sorter_rl)
# Average hourly proportion by carton type
agv <- sapply(sorter_rl[, 2:ncol(sorter_rl)], function(x) c(mean = mn(x), md = median(x), mx = max(x)))
# Average hourly proportion by carton type
agv <- sapply(sorter_rl[, 2:ncol(sorter_rl)], function(x) c(mn = mean(x), md = median(x), mx = max(x)))
avg
# Average hourly proportion by carton type
avg <- sapply(sorter_rl[, 2:ncol(sorter_rl)], function(x) c(mn = mean(x), md = median(x), mx = max(x)))
avg
# Average hourly proportion by carton type
max <- (sorter_rl[which.max(sorter$parcels), ])
max
sum(max[2:length(max)])
max_vals <- sorter[which.max(sorter$parcels), ]
max_vals
sum(sorter$parcels)
head(dt)
unique(dt$area_type[dt$area_packed == "Bagging Line"])
sorter <- dt %>%
select(order_no, customer_selling_system_no, shipping_barcode, pack_user,
area_packed, handling_type, classification, area_type, units, products,
sorter_time) %>%
mutate(sorter_time = ymd_hms(sorter_time), hr = hour(sorter_time),
htype = ifelse(handling_type == 'SmallFinishingCartonNano', 'Nano', classification)) %>%
group_by(hr) %>%
summarise(bagging = n_distinct(if_else(htype == "Bagging Line", shipping_barcode, NULL)),
lpc = n_distinct(if_else(htype == "Large Carton Line", shipping_barcode, NULL)),
mpc = n_distinct(if_else(htype == "MediumPickingCarton", shipping_barcode, NULL)),
mpcl = n_distinct(if_else(htype == "MediumPickingCartonLarge", shipping_barcode, NULL)),
pb = n_distinct(if_else(htype == "Pack Bench", shipping_barcode, NULL)),
hpb = n_distinct(if_else(htype == "Hanging Pack Bench", shipping_barcode, NULL)),
scl = n_distinct(if_else(htype == "Carton Finishing Line", shipping_barcode, NULL)),
nano = n_distinct(if_else(htype == "Nano", shipping_barcode, NULL)),
parcels = n_distinct(shipping_barcode)
)
head(sorter)
max_vals <- sorter[which.max(sorter$parcels), ]
max_vals # parcels at peak hour
head(sorter_lf)
head(sorter)
head(dt)
